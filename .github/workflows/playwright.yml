name: Automated UI tests using Playwright JS

on:
  push:
    paths:
      - 'Playwright_JS_Scripts/**'
      - 'API_tests/**'

jobs:
  run_ui_tests:
    timeout-minutes: 60
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: |
          cd Playwright_JS_Scripts
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd Playwright_JS_Scripts
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          cd Playwright_JS_Scripts
          npx playwright test --project=webkit

      - name: Upload Playwright report
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: Playwright_JS_Scripts/playwright-report/
          retention-days: 30
  
  run_api_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install docker compose
        run: |
          cd API_tests
          sudo apt install docker-compose
      - name: pull docker image
        run: |
          cd API_tests
          docker pull swaggerapi/swagger-ui:v5.17.14
      - name: Run docker-compose
        run: |
          cd API_tests
          docker-compose up -d
      - name: install npm
        run: |
          cd API_tests
          npm install
      - name: install mocha
        run: |
         cd API_tests
         npm i mocha
      - name: install chai
        run: |
          cd API_tests
          npm i --save-dev chai
      - name: install chai-http
        run: |
          cd API_tests
          npm i --save-dev chai-http
      - name: install chai-json-schema
        run: |
          cd API_tests
          npm i --save-dev chai-json-schema
      - name: install mochawesome
        run: |
          cd API_tests
          npm i npm i mochawesome-report-generator
      - name: run test
        run: |
          cd API_tests
          npm test
      - name: Install Postman CLI
        run: |
          cd API_tests
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: |
          cd API_tests
          postman login --with-api-key ${{ secrets.MYKEY }}
      - name: Run API tests
        run: |
           cd API_tests
           postman collection run "${{ github.workspace }}/postman/collections/myTest_api.json"
